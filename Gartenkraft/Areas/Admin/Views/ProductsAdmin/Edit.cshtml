@model Gartenkraft.Models.tblProduct

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit @Model.product_name</h2>
<hr  />
@if (ViewBag.EditMessage != null && ViewBag.EditMessage != "")
{
    <h4 class="text-success">@ViewBag.EditMessage</h4>
    <hr />
    <br />
}
<div class="row form-group">
    <div class="col-xs-12">
        <ul class="nav nav-pills nav-justified thumbnail setup-panel">
            <li class="active">
                <a href="#step-1">
                    <h4 class="list-group-item-heading">Product Info</h4>
                </a>
            </li>
            @if (Model.is_custom_product == true)
            {
                <li>
                    <a href="#step-2">
                        <h4 class="list-group-item-heading">Product Options</h4>
                    </a>
                </li>
            }
            <li>
                <a href="#step-3">
                    <h4 class="list-group-item-heading">Product Images</h4>
                </a>
            </li>
        </ul>
    </div>
</div>
<div class="row setup-content" id="step-1">
    <div class="col-xs-12">
        <div class="col-md-12 well text-center">
            <h2> Product Info</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.product_id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.product_short_description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.product_short_description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.product_short_description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.product_long_description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.product_long_description, new { htmlAttributes = new { @class = "form-control", @rows = "3"  } })
                            @Html.ValidationMessageFor(model => model.product_long_description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.product_category_id, "Product Categories", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("product_category_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.product_category_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.product_date_added, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.product_date_added, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = Model.product_date_added.ToString("yyyy-MM-dd") } })
                            @Html.ValidationMessageFor(model => model.product_date_added, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.soft_delete, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.soft_delete)
                            @Html.ValidationMessageFor(model => model.soft_delete, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.is_visible, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.is_visible)
                            @Html.ValidationMessageFor(model => model.is_visible, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.is_custom_product, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.is_custom_product)
                            @Html.ValidationMessageFor(model => model.is_custom_product, "", new { @class = "text-danger" })
                            <div class="text-danger">@ViewBag.ErrorMessage</div>
                        </div>
                    </div>

                    @if (Model.is_custom_product == false)
                    {
                        @Html.Hidden("optionID", Model.tblProduct_Option.FirstOrDefault().option_id)
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.tblProduct_Option.FirstOrDefault().title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("title", Model.tblProduct_Option.FirstOrDefault().title, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.tblProduct_Option.FirstOrDefault().title, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.tblProduct_Option.FirstOrDefault().weight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("weight", Model.tblProduct_Option.FirstOrDefault().weight, new { @class = "form-control", @type = "number", @min = "0", @step = ".01" })
                                @Html.ValidationMessageFor(model => model.tblProduct_Option.FirstOrDefault().weight, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tblProduct_Option.FirstOrDefault().unit_cost, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("unitCost", Model.tblProduct_Option.FirstOrDefault().unit_cost, new { @class = "form-control", @type = "number", @min = "0", @step = ".01" })
                                @Html.ValidationMessageFor(model => model.tblProduct_Option.FirstOrDefault().unit_cost, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tblProduct_Option.FirstOrDefault().unit_price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("unitPrice", Model.tblProduct_Option.FirstOrDefault().unit_price, new { @class = "form-control", @type = "number", @min = "0", @step = ".01" })
                                @Html.ValidationMessageFor(model => model.tblProduct_Option.FirstOrDefault().unit_cost, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-3">
                            <input type="submit" value="Save" class="btn btn-success" />
                        </div>
                    </div>
                </div>
                <div class="pull-left">
                    @Html.ActionLink("Back to Product List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
                </div>
            }
            @*<button id="activate-step-2" class="btn btn-primary btn-lg">Activate Step 2</button>*@
        </div>
    </div>
</div>

<div class="row setup-content" id="step-2">
    <div class="col-xs-12">
        <div class="col-md-12 well">
            <h2 class="text-center"> Product Options</h2>
            <div class="col-md-12">
                <div id="OptionContent">
                    @Html.Action("ProductOptions")
                </div>
                <hr />
                <div class="pull-left">
                    @Html.ActionLink("Back to Product List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row setup-content" id="step-3">
    <div class="col-xs-12">
        <div class="col-md-12 well">
            <h2 class="text-center"> Images</h2>
            <div class="col-md-12">
                <table class="table">
                    <tr>
                        @*<th><div class="text-center">Images:</div></th>*@
                        <th></th>
                        <th></th>
                    </tr>

                    @foreach (var item in (List<Gartenkraft.Models.tblProduct_Image>)ViewBag.ProductImages)
                    {
                        <tr>
                            <td>
                                <img src="@Url.Content("~/ProductImages/" + item.product_id.ToString() + "/" + item.product_image_name.ToString())" style="width:100px;height:100px;display:inline-block;margin:30px;" class="btn btn-default" />
                            </td>
                            <td>
                                @Html.ActionLink("Remove", "RemoveImage", "Upload", new { productID = item.product_id, imageName = item.product_image_name }, htmlAttributes: new { @class = "btn btn-danger" })
                            </td>
                        </tr>
                    }
                </table>
                <hr />

                <h3 class="text-primary">Image Upload</h3>

                <div class="form-horizontal" @*style="text-align:center;"*@>
                    @using (Html.BeginForm("UploadFile", "Upload", new { productID = Model.product_id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.TextBox("file", "", htmlAttributes: new { @type = "file", @style = "display:inline-block;", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="text-danger">@ViewBag.UploadErrorMessage</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Upload Picture" class="btn btn-success" />
                            </div>
                        </div>
                        <br />
                    }
                </div>
                <div class="pull-left">
                    @Html.ActionLink("Back to Product List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
                </div>
            </div>

            <div style="clear:both;">&nbsp;</div>
        </div>
    </div>
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@